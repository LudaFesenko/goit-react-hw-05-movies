{"version":3,"file":"static/js/112.c4142cee.chunk.js","mappings":"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","sources":["api/index.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'ece71aad9171ec15880a13ae16940cc4';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\n\nexport async function fetchTrending() {\n  const response = await axios.get('/3/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchMoviesBySearchString(searchString, controller) {\n  const response = await axios.get('/3/search/movie', {\n    signal: controller.signal,\n    params: {\n      api_key: API_KEY,\n      query: searchString,\n      page: 1,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieDetails(movieId, controller) {\n  const response = await axios.get(`/3/movie/${movieId}`, {\n    signal: controller.signal,\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await axios.get(`/3/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(`/3/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ListMovie = styled.ul`\n  list-style: none;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  font-size: 18px;\n  text-decoration: underline;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n\n  &:hover {\n    color: red;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { ListMovie, Link } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ListMovie>\n      {movies &&\n        movies.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <p>{title}</p>\n            </Link>\n          </li>\n        ))}\n    </ListMovie>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding: 16px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px;\n`;\n\nexport const Button = styled.button`\n  padding: 8px;\n`;\n","import { React, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSearchParams } from 'react-router-dom';\nimport { Notify } from 'notiflix';\n\nimport { Form, Input, Button } from './SearchBox.styled';\n\nconst SearchBox = ({ onSubmit, submitting }) => {\n  const [searchParams] = useSearchParams();\n  const searchString = searchParams.get('query') ?? '';\n\n  const [input, setInput] = useState(searchString);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!input.trim()) {\n      Notify.failure('Please enter movie');\n      return;\n    }\n    onSubmit(input);\n  };\n\n  const handleChange = event => setInput(event.target.value.toLowerCase());\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          name=\"search\"\n          type=\"text\"\n          value={input}\n          autoComplete=\"off\"\n          autoFocus\n          onChange={handleChange}\n          disabled={submitting}\n        />\n        <Button type=\"submit\">{submitting ? 'Loading...' : 'Search'}</Button>\n      </Form>\n    </div>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired,\n};\n\nexport default SearchBox;\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Notify } from 'notiflix';\n\nimport MoviesList from '../../components/MoviesList';\nimport Loader from '../../components/Loader';\nimport SearchBox from '../../components/SearchBox';\nimport { fetchMoviesBySearchString } from '../../api/index';\n\nconst Movies = () => {\n  const [foundMovies, setFoundMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchString = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    if (!searchString) {\n      return;\n    }\n\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const movies = await fetchMoviesBySearchString(\n          searchString,\n          abortController\n        );\n\n        setFoundMovies(movies.results);\n\n        if (!movies.results.length) {\n          Notify.failure('Please write correct movie');\n        }\n      } catch (error) {\n        if (axios.isCancel(error)) {\n          return;\n        }\n\n        const errorMessage = error?.response?.data?.status_message;\n        Notify.failure(errorMessage || 'Write correct movie');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [searchString]);\n\n  const handleSubmit = query => {\n    if (loading) {\n      return;\n    }\n\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <SearchBox onSubmit={handleSubmit} submitting={loading} />\n      {loading && <Loader />}\n      {foundMovies && <MoviesList movies={foundMovies} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","fetchTrending","axios","params","api_key","response","data","fetchMoviesBySearchString","searchString","controller","signal","query","page","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","ListMovie","styled","Link","NavLink","movies","location","useLocation","map","id","title","to","state","from","Form","Input","Button","onSubmit","submitting","useSearchParams","get","useState","input","setInput","event","preventDefault","trim","Notify","name","type","value","autoComplete","autoFocus","onChange","target","toLowerCase","disabled","foundMovies","setFoundMovies","loading","setLoading","searchParams","setSearchParams","useEffect","abortController","AbortController","fetchData","results","length","errorMessage","status_message","abort","Loader","MoviesList"],"sourceRoot":""}