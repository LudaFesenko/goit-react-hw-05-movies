{"version":3,"file":"static/js/244.c365aaef.chunk.js","mappings":"mTAEMA,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAU,wBAAyB,CACxDC,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAOEA,EAASC,MAPX,kEAUA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAyCC,EAAcC,GAAvD,uFACkBP,EAAAA,EAAAA,IAAU,kBAAmB,CAClDQ,OAAQD,EAAWC,OACnBP,OAAQ,CACNC,QAASJ,EACTW,MAAOH,EACPI,KAAM,KANL,cACCP,EADD,yBASEA,EAASC,MATX,kEAYA,SAAeO,EAAtB,iDAAO,OAAP,oBAAO,WAAiCC,EAASL,GAA1C,uFACkBP,EAAAA,EAAAA,IAAA,mBAAsBY,GAAW,CACtDJ,OAAQD,EAAWC,OACnBP,OAAQ,CACNC,QAASJ,KAJR,cACCK,EADD,yBAOEA,EAASC,MAPX,kEAUA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,uFACkBZ,EAAAA,EAAAA,IAAA,mBAAsBY,EAAtB,YAAyC,CAC9DX,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,uFACkBZ,EAAAA,EAAAA,IAAA,mBAAsBY,EAAtB,YAAyC,CAC9DX,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEA3CPJ,EAAAA,EAAAA,SAAAA,QAAyB,6B,4KCDZe,E,QAAOC,GAAAA,GAAH,sD,SCmDjB,EA7CgB,WACd,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KACQT,GAAYU,EAAAA,EAAAA,IAAU,IAAtBV,QAiBR,OAfAW,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdL,GAAa,GAFC,UAGOL,EAAAA,EAAAA,IAAkBF,GAHzB,OAGRa,EAHQ,OAIdJ,EAAUI,EAAOC,SAJH,yEAMPC,EAAAA,OAAAA,QAAe,yBANR,yBAQdR,GAAa,GARC,4EAAH,qDAWfK,GACD,GAAE,CAACZ,IAECQ,EAIiB,IAAlBA,EAAOQ,QACF,4EAIP,gCACGV,IAAa,SAACW,EAAA,EAAD,KACd,SAACd,EAAD,iBACGK,QADH,IACGA,OADH,EACGA,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,sCACU,0BAAOD,QAEjB,uBAAIC,MAJGF,EADE,SAXV,IAsBV,C","sources":["api/index.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'ece71aad9171ec15880a13ae16940cc4';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\n\nexport async function fetchTrending() {\n  const response = await axios.get('/3/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchMoviesBySearchString(searchString, controller) {\n  const response = await axios.get('/3/search/movie', {\n    signal: controller.signal,\n    params: {\n      api_key: API_KEY,\n      query: searchString,\n      page: 1,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieDetails(movieId, controller) {\n  const response = await axios.get(`/3/movie/${movieId}`, {\n    signal: controller.signal,\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await axios.get(`/3/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(`/3/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n","import styled from 'styled-components';\n\nexport const Card = styled.ul`\n  background-color: #f4efef;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Notify } from 'notiflix';\n\nimport { fetchMovieReviews } from '../../api';\nimport Loader from '../Loader';\nimport { Card } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [review, setReview] = useState(null);\n  const { movieId } = useParams('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const result = await fetchMovieReviews(movieId);\n        setReview(result.results);\n      } catch (error) {\n        return Notify.success('Something went wrong');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  if (!review) {\n    return null;\n  }\n\n  if (review.length === 0) {\n    return <p>Sorry we don't have any reviews for this movie!</p>;\n  }\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <Card>\n        {review?.map(({ id, author, content }) => (\n          <li key={id}>\n            <h2>\n              Author: <span>{author}</span>\n            </h2>\n            <p>{content}</p>\n          </li>\n        ))}\n      </Card>\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","fetchTrending","axios","params","api_key","response","data","fetchMoviesBySearchString","searchString","controller","signal","query","page","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","Card","styled","useState","isLoading","setIsLoading","review","setReview","useParams","useEffect","fetchData","result","results","Notify","length","Loader","map","id","author","content"],"sourceRoot":""}