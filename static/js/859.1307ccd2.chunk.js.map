{"version":3,"file":"static/js/859.1307ccd2.chunk.js","mappings":"mTAEMA,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAU,wBAAyB,CACxDC,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAOEA,EAASC,MAPX,kEAUA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAyCC,EAAcC,GAAvD,uFACkBP,EAAAA,EAAAA,IAAU,kBAAmB,CAClDQ,OAAQD,EAAWC,OACnBP,OAAQ,CACNC,QAASJ,EACTW,MAAOH,EACPI,KAAM,KANL,cACCP,EADD,yBASEA,EAASC,MATX,kEAYA,SAAeO,EAAtB,iDAAO,OAAP,oBAAO,WAAiCC,EAASL,GAA1C,uFACkBP,EAAAA,EAAAA,IAAA,mBAAsBY,GAAW,CACtDJ,OAAQD,EAAWC,OACnBP,OAAQ,CACNC,QAASJ,KAJR,cACCK,EADD,yBAOEA,EAASC,MAPX,kEAUA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,uFACkBZ,EAAAA,EAAAA,IAAA,mBAAsBY,EAAtB,YAAyC,CAC9DX,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,uFACkBZ,EAAAA,EAAAA,IAAA,mBAAsBY,EAAtB,YAAyC,CAC9DX,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEA3CPJ,EAAAA,EAAAA,SAAAA,QAAyB,6B,sGCAZe,EAAYC,EAAAA,GAAAA,GAAH,6CAITC,GAAOD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,qO,SCwBjB,EA1BmB,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACN,EAAD,UACGI,GACCA,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,yBACE,SAACP,EAAD,CAAMQ,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,UACE,uBAAII,OAFCD,EADA,KASlB,C,0KCgBD,EA7Ba,WACX,OAA4CK,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdF,GAAa,GAFC,UAGSjC,EAAAA,EAAAA,MAHT,OAGRoC,EAHQ,OAIdL,EAAkBK,EAASC,SAJb,yEAMPC,EAAAA,OAAAA,QAAA,4BANO,yBAQdL,GAAa,GARC,4EAAH,qDAWfE,GACD,GAAE,KAGD,iCACE,2CACCH,IAAa,SAACO,EAAA,EAAD,IAEbT,IAAkB,SAACU,EAAA,EAAD,CAAYpB,OAAQU,MAG5C,C","sources":["api/index.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'ece71aad9171ec15880a13ae16940cc4';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\n\nexport async function fetchTrending() {\n  const response = await axios.get('/3/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchMoviesBySearchString(searchString, controller) {\n  const response = await axios.get('/3/search/movie', {\n    signal: controller.signal,\n    params: {\n      api_key: API_KEY,\n      query: searchString,\n      page: 1,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieDetails(movieId, controller) {\n  const response = await axios.get(`/3/movie/${movieId}`, {\n    signal: controller.signal,\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await axios.get(`/3/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(`/3/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ListMovie = styled.ul`\n  list-style: none;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  font-size: 18px;\n  text-decoration: underline;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n\n  &:hover {\n    color: red;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { ListMovie, Link } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ListMovie>\n      {movies &&\n        movies.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <p>{title}</p>\n            </Link>\n          </li>\n        ))}\n    </ListMovie>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import { React, useEffect, useState } from 'react';\nimport { Notify } from 'notiflix';\n\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport Loader from '../../components/Loader';\nimport { fetchTrending } from '../../api';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const trending = await fetchTrending();\n        setTrendingMovies(trending.results);\n      } catch (error) {\n        return Notify.failure(`Sorry, please try again`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <h2>Trending today</h2>\n      {isLoading && <Loader />}\n\n      {trendingMovies && <MoviesList movies={trendingMovies} />}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["API_KEY","fetchTrending","axios","params","api_key","response","data","fetchMoviesBySearchString","searchString","controller","signal","query","page","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","ListMovie","styled","Link","NavLink","movies","location","useLocation","map","id","title","to","state","from","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","useEffect","fetchData","trending","results","Notify","Loader","MoviesList"],"sourceRoot":""}